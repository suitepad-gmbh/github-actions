env:
  RUNS_ON_S3_BUCKET_CACHE: github-runner-cache-20240808144417347400000001
  AWS_REGION: eu-central-1

name: Build docker image and push to ECR

on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string
      cache-mix:
        required: false
        type: boolean
        default: false
      registry:
        required: true
        type: string
      aws-region:
        required: true
        type: string
        default: eu-central-1

    secrets:
      aws-access-key-id:
        required: true
      aws-secret-access-key:
        required: true
      pat-github:
        required: true

jobs:
  docker_build_push:
    name: Build docker image and push to ECR
    runs-on: [self-hosted, ubuntu-24.04, 2-cores]
    env:
      COMPOSE_BAKE: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.pat-github }}
          submodules: "true"

      - name: Export short sha to outputs
        id: export-sha
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.aws-access-key-id }}
          aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
          aws-region: ${{ inputs.aws-region }}

      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: "true"

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Add metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.ecr-login.outputs.registry }}/${{ inputs.image }}
          tags: |
            ${{ steps.export-sha.outputs.sha_short }}

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          cache-to: mode=max,type=registry,ref=${{ steps.ecr-login.outputs.registry }}/${{ inputs.image }}:cache,compression=zstd,force-compression=true
          cache-from: type=registry,ref=${{ steps.ecr-login.outputs.registry }}/${{ inputs.image }}:cache
          build-args: |
            COMMIT_ID=${{ steps.export-sha.outputs.sha_short }}
